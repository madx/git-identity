#!/bin/bash

USAGE="[-d|--define] <identity> <name> <email>"
USAGE="$USAGE | [-p|--print] <identity>"
USAGE="$USAGE | [-r|--remove] <identity>"
USAGE="$USAGE | [-l|--list]"
USAGE="$USAGE | [-R|--list-raw]"
USAGE="$USAGE | [--define-gpg] <gpgkeyid>"
USAGE="$USAGE | <identity>"

. $(git --exec-path)/git-sh-setup

lookup () {
  local identity="$1"
  local key="$2"

  git config "identity.$identity.$key"
}

format_identity () {
  local identity="$1"

  echo "[$identity] $(format_raw_identity "$identity")"
}

format_raw_identity () {
  local identity="$1"
  local gpgkey="$(lookup $identity signingkey)"
  
  local output="$(lookup "$identity" name) <$(lookup "$identity" email)>"
  if [ "$gpgkey" != "" -a "$gpgkey" != " " ];
  then
    output="$output (GPG key: $gpgkey)"
  fi
  
  echo "$output"
}

use_identity () {
  local identity="$1"
  local name="$(lookup "$identity" name)"
  local email="$(lookup "$identity" email)"
  local gpgkey="$(lookup "$identity" signingkey)"

  echo "Using identity: $(format_identity "$identity")"
  git config user.identity "$identity"
  git config user.name "$name"
  git config user.email "$email"
  
  # Enable or disable GPG key usage
  if [ "$gpgkey" != "" -a "$gpgkey" != " " ];
  then
    git config user.signingkey "$gpgkey"
    git config commit.gpgsign true
  else
    git config --unset user.signingkey
    git config --unset commit.gpgsign
  fi
}

list_raw_identities () {
  git config --get-regexp '^identity\.' | cut -d"." -f2 | sort -u
}

list_identities () {
  local identities="$(list_raw_identities)"

  echo "Available identities:"
  for identity in $identities; do
    format_identity "$identity"
  done
}

print_raw_identity () {
  local identity="$1"

  if [ "x$identity" = "x" ]; then
    identity="$(git config user.identity)"
  fi

  echo "$(format_raw_identity "$identity")"
}

print_current_identity () {
  local identity="$(git config user.identity)"

  echo "Current identity: $(format_identity "$identity")"
}

define_identity () {
  local identity="$1"
  local name="$2"
  local email="$3"

  git config --global identity."$identity".name "$name"
  git config --global identity."$identity".email "$email"
  echo "Created $(format_identity "$identity")"
}

remove_identity () {
  local identity="$1"
  local formated_identity="$(format_identity "$identity")"

  git config --global --remove-section identity."$identity"
  echo "Removed $formated_identity"
}

define_gpg () {
  local identity="$1"
  local gpgkey="$2"
  
  git config --global identity."$identity".signingkey "$gpgkey"
  git config --global identity."$identity".gpgsign true
  echo "Added GPG key $gpgkey to $(format_identity "$identity")"
}

IDENTITY="$1"

check_arguments () {
  if [ $1 -lt $2 ]; then
    usage
    exit 1
  fi
}

case $IDENTITY in
  "") print_current_identity ;;

  -l|--list) list_identities ;;

  -R|--list-raw) list_raw_identities ;;

  -d|--define)
    shift
    check_arguments $# 3
    define_identity "$1" "$2" "$3"
    ;;

  --define-gpg)
    shift
	check_arguments $# 2
	define_gpg "$1" "$2"
	;;
	
  -r|--remove)
    shift
    check_arguments $# 1
    remove_identity "$1"
    ;;

  -p|--print)
    shift
    print_raw_identity "$1"
    ;;
  
  *) use_identity "$IDENTITY" ;;
esac
